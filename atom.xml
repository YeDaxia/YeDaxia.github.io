<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Darcy&#39;s Blog</title>
  <subtitle>纸上得来终觉浅，绝知此时要躬行。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yedaxia.github.io/"/>
  <updated>2018-02-03T03:58:50.494Z</updated>
  <id>https://yedaxia.github.io/</id>
  
  <author>
    <name>叶大侠</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VexTab介绍 - 一种即时可视的web乐谱语言 | 译文</title>
    <link href="https://yedaxia.github.io/VexTab-Introdution/"/>
    <id>https://yedaxia.github.io/VexTab-Introdution/</id>
    <published>2018-02-02T16:26:15.000Z</published>
    <updated>2018-02-03T03:58:50.494Z</updated>
    
    <content type="html"><![CDATA[<p>VexTab 是一种用于书写音乐的语言，你只需要花非常少的时间学习一下，就可以用它来创建，编辑和分享非常好看的五线谱和六线谱了。和 ASCII 谱的设计目标为易于阅读不一样，VexTab 是为了可方便书写而诞生的。</p>
<a id="more"></a>
<p>英文原文：<a href="http://www.vexflow.com/vextab/tutorial.html" target="_blank" rel="external">vextab tutorial</a><br>在线体验：<a href="http://52cmajor.com/tab/editor" target="_blank" rel="external">vextab 编辑器</a></p>
<h2 id="什么是-VexTab"><a href="#什么是-VexTab" class="headerlink" title="什么是 VexTab ?"></a>什么是 VexTab ?</h2><p>VexTab 是一种用于书写音乐的语言，你只需要花非常少的时间学习一下，就可以用它来创建，编辑和分享非常好看的五线谱和六线谱了。和 ASCII 谱的设计目标为易于阅读不一样，VexTab 是为了可方便书写而诞生的。</p>
<p>下面就让我们开始学习书写这漂亮而美好的音符吧。</p>
<h2 id="第一步：谱表"><a href="#第一步：谱表" class="headerlink" title="第一步：谱表"></a>第一步：谱表</h2><p>关键字<code>tabstave</code>用于创建一行谱表，下面的编辑框都是可以进行编辑的，赶紧试一下在新的一行添加<code>tabstave</code>看看效果吧。</p>
<p><code>tabstave</code> 后面可以跟一些参数，比如<code>tabstave notation=true</code>的意思是显示一张标准的谱表(上面是五线谱，下面是六线谱)。别只看啊！动手试一下。</p>
<pre class="vex-tab-container">tabstave
</pre>

<h2 id="第二步：添加一些音符"><a href="#第二步：添加一些音符" class="headerlink" title="第二步：添加一些音符"></a>第二步：添加一些音符</h2><p>关键字<code>notes</code>可以用于添加音符。你可以通过在钢琴上的位置(<code>note/octave</code>)或者吉他指板的位置(<code>fret/string</code>)来表示。如果需要在同一根弦或者同个音区添加多个音符，可以通过这种表达式：<code>fret-fret-fret/string</code> (或者 <code>note-note-note/octave</code>)。根据你个人的喜爱来选择即可。</p>
<p>试着编辑一下下面的音符，留意它们在谱上的位置变化，结合下面的音区图去理解语法的作用。音符后可以跟随<code>#</code>, <code>##</code>, <code>@</code>, <code>@@</code>, 和 <code>n</code> 这几种记号，它们分别表示升半音，升全音，降半音，降全音和<a href="https://zh.wikipedia.org/wiki/%E8%BF%98%E5%8E%9F%E5%8F%B7" target="_blank" rel="external">还原音</a>。</p>
<pre class="vex-tab-container">tabstave notation=true tablature=false
notes Cn-D-E/4 F#/5</pre>

<p>盗一张图，结合这个图就明白<code>note/octave</code>方式了。</p>
<p><img src="http://yedaxia.oss-cn-shanghai.aliyuncs.com/personal/piano-pitches3-1024x375.jpg?x-oss-process=image/resize,w_500" alt="image"></p>
<p>下面是吉他谱：</p>
<pre class="vex-tab-container">tabstave notation=true
notes 4-5-6/3 10/4</pre>

<h2 id="第三步：谱表关键字"><a href="#第三步：谱表关键字" class="headerlink" title="第三步：谱表关键字"></a>第三步：谱表关键字</h2><p><code>tabstave</code> 可以跟随下面的参数：</p>
<table>
<thead>
<tr>
<th>关键字</th>
<th>值/例子</th>
</tr>
</thead>
<tbody>
<tr>
<td>notation</td>
<td>true/false</td>
</tr>
<tr>
<td>tablature</td>
<td>true/false</td>
</tr>
<tr>
<td>clef</td>
<td>treble, alto, tenor, bass, percussion</td>
</tr>
<tr>
<td>key</td>
<td>C, Am, F, Dm, Bb, Gm, Eb, Cm, Ab, Fm, Db, Bbm, Gb, Ebm, Cb, Abm, G, Em, D, Bm, A, F#m, E, C#m, B, G#m, F#, D#m, C#, A#m</td>
</tr>
<tr>
<td>time</td>
<td>C, C│, #/#</td>
</tr>
<tr>
<td>tuning</td>
<td>standard, dropd, eb, E/5,B/4,G/4,D/4,A/3,E/3</td>
</tr>
</tbody>
</table>
<p>例子：</p>
<ul>
<li><code>tabstave notation=true</code> 代表显示标准五线谱和六线谱。</li>
<li><code>tabstave notation=true tablature=false</code> 代表只显示五线谱。</li>
<li><code>tabstave notation=true clef=alto</code> 表示女低音谱号。</li>
<li><code>tabstave notation=true clef=bass key=C# time=C|</code> 表示 4/4 拍的低音谱，同时包含五线谱和六线谱。</li>
</ul>
<p>来试一下吧：</p>
<pre class="vex-tab-container">tabstave notation=true clef=bass key=Ab time=C|
notes 4-5/6</pre>

<h2 id="第四步：休止符和添加小节"><a href="#第四步：休止符和添加小节" class="headerlink" title="第四步：休止符和添加小节"></a>第四步：休止符和添加小节</h2><p><code>##</code> 表示休止符，默认会自动排好位置，你也可以通过在中间加个数字来改变所在的谱线，格式是<code>#4#</code>，值的范围是 0 到 9 。</p>
<p>小节的分隔符是<code>|</code>, 你可以在谱表中任意添加。</p>
<pre class="vex-tab-container">tabstave notation=true
notes 4-5-6/3 ## | 5-4-2/3 2/2

tabstave notation=true tablature=false
notes C-D-E/4 #0# | C-D-E-F/4</pre>

<p>另外，还有一些特殊的小节线。</p>
<ul>
<li><code>=||</code>  复纵线，表示乐曲告一段落，两条小节线是同样大小的</li>
<li><code>=|:</code>  重复开始</li>
<li><code>=:|</code>  重复结束</li>
<li><code>=::</code>  重复开始和结束</li>
<li><code>=|=</code>  终止线</li>
</ul>
<pre class="vex-tab-container">tabstave notation=true tablature=false
notes 4-5-6/3 ## =|: 5-4-2/3 2/2 =:|

tabstave notation=true tablature=false
notes C-D-E/4 #0# =:: C-D-E-F/4 =|=
</pre>

<h2 id="第五步：推弦音"><a href="#第五步：推弦音" class="headerlink" title="第五步：推弦音"></a>第五步：推弦音</h2><p>吉他演奏中常用的技巧，通过在指板数后添加<code>b</code>，就可以表示推弦音了。比如<code>10b12</code>表示一个全音推弦，<code>10b11</code>表示半音推弦，不难猜到<code>b</code>后面跟的是音的步值。那如何表示推高之后返回原来的音呢？答案就是 <code>10b12b10</code>，是不是很好理解。</p>
<pre class="vex-tab-container">tabstave
notes 4-5-6b7/3 10/4 | 5-4-2/3 2/2

tabstave
notes 6-7b9b7/3 7/4 | 9-8-7-6/2</pre>


<h2 id="第六步：哑音、上下拨弦和颤音"><a href="#第六步：哑音、上下拨弦和颤音" class="headerlink" title="第六步：哑音、上下拨弦和颤音"></a>第六步：哑音、上下拨弦和颤音</h2><p><code>X</code> 表示哑音，在音名后加小<code>v</code>表示颤音，大<code>V</code>则表示强颤音，同时你也可以推弦音后面加颤音，看下面的例子如何表示。</p>
<p><code>u</code> 和 <code>d</code> 分别表示上拨弦和下拨弦。</p>
<pre class="vex-tab-container">tabstave notation=true
notes 4-5-6b7v/3 10/1 | 5d-4u-Xd/3 2v/2</pre>

<h2 id="第七步：添加和弦"><a href="#第七步：添加和弦" class="headerlink" title="第七步：添加和弦"></a>第七步：添加和弦</h2><p>上面讲的都是单个音的表示，终于轮到和弦了。在谱上和弦是通过括号<code>()</code>和<code>.</code>来连接表示的，比如 C 和弦：<code>(C/4.E/4.G/4)</code>，当然也可以用指版数字的方法：<code>(1/2.2/4.3/5)</code>。</p>
<pre class="vex-tab-container">tabstave notation=true tablature=false
notes (C/4.E/4.G/4) C-E-G/4

tabstave notation=true
notes (8/2.7b9b7/3) (5b6/2.5b6/3) 7/4 |
notes (5/2.6/3.7/4)</pre>


<h2 id="第八步：击弦、勾弦、點弦-和-滑弦"><a href="#第八步：击弦、勾弦、點弦-和-滑弦" class="headerlink" title="第八步：击弦、勾弦、點弦 和 滑弦"></a>第八步：击弦、勾弦、點弦 和 滑弦</h2><p>这四种技巧分别用<code>h</code>, <code>p</code>, <code>t</code> or <code>s</code>,这个和一般吉他谱的表示是一样的。比如你要从6击弦到8然后再勾弦回6，就可以用<code>6h8p6</code>，你也可以在和弦上使用这些符号。</p>
<pre class="vex-tab-container">tabstave
notes (5/2.5/3.7/4) 5h6/3 7/4 |
notes t12p7p5h7/4 7/5 5s3/5

tabstave
notes (8/2.7b9b7/3) (5b6/2.5b6/3)v 7s0/4 |
notes (5/2.6/3.7/4)v

tabstave
notes (5/4.5/5)s(7/4.7/5)s(5/4.5/5) (5/4.5/5)h(7/5) |
notes t(12/5.12/4)s(5/5.5/4) 3b4/5 5V/6</pre>


<h2 id="第九步：加入音长-拍子-和连音"><a href="#第九步：加入音长-拍子-和连音" class="headerlink" title="第九步：加入音长(拍子)和连音"></a>第九步：加入音长(拍子)和连音</h2><p>默认都是4分音符(1/4拍)，你可以通过冒号<code>:</code>去改变它。</p>
<p>比如，<code>:w</code> 表示一个全音符。目前支持的音长有：全音符，二分音符，四分音符，8分音符，16分音符和32分音符，它们分别对于的符号是<code>w</code> <code>h</code> <code>q</code> <code>8</code> <code>16</code> <code>32</code>。如果要表示附点音符，则可以在相应的符号后面加<code>d</code>，例如：<code>:qd</code>。</p>
<p>连音的符号是<code>^</code>，比如八分音符的三连音表示为：<code>:8 4-5-6/4 ^3^</code>。</p>
<pre class="vex-tab-container">tabstave notation=true time=4/4 key=Ab tuning=eb
notes :8 5s7s8/5 ^3^ :q (5/2.6/3)h(7/3) :8d 5/4 :16 5/5</pre>

<p>下面是更复杂的例子，它演示了如何在滑音，推弦音等其他技巧音上使用音长。请你认真体会。</p>
<pre class="vex-tab-container">tabstave notation=true
notes :q (8/2.7b9b7/3) (5b6/2.5b6/3)v :8 7s12/4
notes t:16:9s:8:3s:16:0/4</pre>

<h2 id="第十步：歌词，注释或者其他文本"><a href="#第十步：歌词，注释或者其他文本" class="headerlink" title="第十步：歌词，注释或者其他文本"></a>第十步：歌词，注释或者其他文本</h2><p>你可以通过美元符号 $  中间附上逗号<code>,</code>来分隔文本来添加注释。你可以用于歌词，和弦提示，或者一些弹奏提示中。</p>
<p>$.top.$ 表示在注释在谱线上面，$.bottom.$ 表示在下面。</p>
<pre class="vex-tab-container">tabstave notation=true time=4/4 key=Ab tuning=eb
    notes :q 5/5 5/4 5/3 ^3^ $Fi,Ga,Ro!$ :h 4/4 $.top.$ $Blah!$</pre>

<p>有两种方式去改变注释样式，一种是用预设的样式，一种是自定义的样式。对于预设的方式，你只需要在美元符号中添加<code>.style.</code> + 预设的样式就可以了，比如 $.big.C Major$ 表示大码的<code>C Major</code>显示。</p>
<p>目前预设的样式有<code>big</code>、 <code>medium</code> 和 <code>italic</code>。</p>
<p>对于自定义的方式，语法是这样的：<code>.face.size.style</code> ，<code>face</code>表示字体，<code>size</code>表示字体大小，<code>style</code> 是字体样式（斜体：italic，加粗：bold）。例如  $.Times-14-italic.Blah$ 表示 14pt 大小、斜体、Italic Times Roman 字体的文本注释文本 Blah。</p>
<pre class="vex-tab-container">tabstave notation=true key=A
notes :q (5/2.5/3.7/4) $.big.A7#9$ 5h6/3 7/4 |
notes :8 7/4 $.italic.sweep$ 6/3 5/2 3v/1 :q 7v/5 $.Arial-10-bold.P.H$ :8 3s5/5</pre>

<h2 id="第十一步：断音-Staccatos-，延音-Fermatas-等更多衔接音。"><a href="#第十一步：断音-Staccatos-，延音-Fermatas-等更多衔接音。" class="headerlink" title="第十一步：断音(Staccatos)，延音(Fermatas)等更多衔接音。"></a>第十一步：断音(Staccatos)，延音(Fermatas)等更多衔接音。</h2><p>你可以通过  $.articulation/position.$ 这种语法来添加衔接音。不同的衔接音有不同的符号表示。 <code>a.</code> 代表 staccato,<code>a@a</code> 代表 up-fermata，它们可以放置在谱线的上面或者下面。</p>
<p>下面的列表展示了所有支持的衔接音。</p>
<pre class="vex-tab-container">options space=20 font-style=italic
font-face=times font-size=10

tabstave notation=true tablature=false
notes :q
notes C/4 $.a./bottom.$
notes E/4 $.av/bottom.$
notes G/4 $.a>/bottom.$
notes B/4 $.a-/bottom.$
notes C/5 $.a^/top.$
notes E/5 $.a+/top.$
notes G/5 $.ao/top.$

text :q,.-1,.strict,Stacatto,Staccatissimo
text Accent,Tenuto,Marcato,LH pizzicato,Snap pizzicato
text ++,.12,.font=courier-12-,:q,a.,av,a>,a-,a^,a+,ao

options space=120 font-style=italic
font-face=times font-size=10

tabstave notation=true tablature=false
notes :q
notes C/4 $.ah/bottom.$
notes E/4 $.a@a/top.$
notes G/4 $.a@u/bottom.$
notes B/4 $.a|/bottom.$
notes C/5 $.am/top.$

text :q,.-1,.strict,Open Note,Up Fermata
text Down Fermata,Bow Up,Bow Down
text ++,.12,.font=courier-12-,:q,ah,a@a,a@u,a|,am

options space=40
</pre>

<h2 id="第十二步：更多的文本"><a href="#第十二步：更多的文本" class="headerlink" title="第十二步：更多的文本"></a>第十二步：更多的文本</h2><p>VexTab 还提供了一种非常灵活添加文本的方式，利用<code>text</code>关键字可以创建和音符垂直对齐的文本，这种方式非常合适于放置和弦的名称。</p>
<p>在下面的示例中，我创建了两个文本块， “G Minor” 和 “A Major”，每个都是二分音符。注意这里文本块的音长间隔之间使用逗号隔开的，除了这一点，音长规则表示也是和音符一样的。</p>
<pre class="vex-tab-container">options space=12 font-size=14

tabstave notation=true time=4/4 key=Ab tuning=eb
notes :q 5/5 5/4 5/3 ^3^ :h 4/4
text :h,G Minor,A Major</pre>

<p>可以通过<code>.数字</code>这种方式来跳转文块在垂直方向上的位置，默认是0，表示在谱的上面，这个值越大，表示越往下，如果值是负数，则越小越往上面。</p>
<pre class="vex-tab-container">options space=10

tabstave notation=true tablature=false time=4/4 key=Ab tuning=eb
notes :8 C-D-E-F-G-A-B/4 C/5
text :8,.1,Do,Re,Me,.10,Fa,So,La,Ti,.1,Do

options space=10</pre>

<p>像音符一样，你也可以通过<code>|</code>来分隔文本小节，这样可以更好的对齐，另外，你还可以通过<code>++</code>语法来在同一行谱线上创建新的一行文本。简直太强大有木有～</p>
<pre class="vex-tab-container">options space=10 font-size=12

tabstave notation=true tablature=false
time=4/4 key=Ab tuning=eb
notes :q C-D-E-F/4 | G-A-B/4 C/5
text :h,.1,C,Em,|
text :h,G7,C
text ++, .11, :w, This is a new text line.

options space=15
</pre>

<p>还没完，你还能在文本上添加很多音乐符号，比如结尾和重复。只需要在关键字前面加上<code>#</code>就可以了，e.g., <code>text #coda</code>。</p>
<pre class="vex-tab-container">options space=20 font-size=12

tabstave notation=true tablature=false
time=4/4 key=Ab tuning=eb
notes :q =|: C-D-E-F/4 =:| G-A-B/4 C/5
text |#coda, :hd, , :q, #tr, |#segno
text ++, .11, |, #f
text ++, .0, .font=Times-12-italic, |, :w, ,|, :q, ,D.S. al coda

options space=25</pre>

<h2 id="第十三步：旋律斜线记法"><a href="#第十三步：旋律斜线记法" class="headerlink" title="第十三步：旋律斜线记法"></a>第十三步：旋律斜线记法</h2><p>在音长符号前面加上大写<code>S</code>就可以变成斜线的记法了。在下面的示例中，你可以尝试改一下音名看看效果。你也可以通过 <code>u</code> 或 <code>d</code> 来表示动作的上下。</p>
<pre class="vex-tab-container">options font-size=14 space=15

tabstave notation=true tablature=false
time=4/4 clef=percussion
notes :2S Bd/4 :qS Bd/4 :q ## | :8S Bd/4 Bu/4 :qS Bd-Bu-Bd/4 ^3^
text :w, G Maj7, |, Am

options space=10</pre>

<h2 id="第十四步：定义外观"><a href="#第十四步：定义外观" class="headerlink" title="第十四步：定义外观"></a>第十四步：定义外观</h2><p>定义外观主要是通过<code>options</code>的参数来完成的，你可以根据喜好更改字体，谱的大小和美化谱线距离等。比如 <code>options width=400</code> 表示谱的宽度是 400 像素。</p>
<p>下面是相关的参数列表。</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>width</td>
<td>谱的宽度，单位是像素</td>
</tr>
<tr>
<td>scale</td>
<td>缩放系数，默认是1</td>
</tr>
<tr>
<td>space</td>
<td>和下一行谱线的距离，单位是像素</td>
</tr>
<tr>
<td>stave-distance</td>
<td>五线谱和六线谱之间的距离，单位是像素</td>
</tr>
<tr>
<td>font-face/font-style/font-size</td>
<td>注释字体的默认参数</td>
</tr>
</tbody>
</table>
<p>加多一些空间给在谱线比较高位置的音：</p>
<pre class="vex-tab-container">options width=100 scale=2.0
tabstave notation=true tablature=false
notes :q 5/5</pre>

<p>加多一些空间给在谱线比较高位置的音：</p>
<pre class="vex-tab-container">options space=40 font-size=14
tabstave notation=true key=A
notes :q (5/2.5/3.7/4) $A7#9$ 15h16/1 20/1
</pre>

<p>让五线谱和六线谱距离更远：</p>
<pre class="vex-tab-container">options stave-distance=50
tabstave notation=true key=A
notes :q (5/2.5/3.7/4) ## 0h1/6 0/1
</pre>


<h2 id="第十五步：六线谱也可以带拍号"><a href="#第十五步：六线谱也可以带拍号" class="headerlink" title="第十五步：六线谱也可以带拍号"></a>第十五步：六线谱也可以带拍号</h2><p>添加 <code>tab-stems</code> 参数就可以在六线谱上显示拍号了。对于单独的人声旋律谱，你可以通过 <code>tab-stem-direction</code> 参数来指定拍号的方向。</p>
<p>注意你需要改变一下 <code>space</code> 和 <code>stave-distance</code> 参数值来避免出现重叠。</p>
<pre class="vex-tab-container">options space=12 font-size=14
tab-stems=true tab-stem-direction=up

tabstave time=4/4 key=A
notes :8 5/5 5/4 5/3 ^3^ :16 5-6-7-8/1 :8 9s10/1 :h s9v/1</pre>

<h2 id="第十六步：播放你的音符"><a href="#第十六步：播放你的音符" class="headerlink" title="第十六步：播放你的音符"></a>第十六步：播放你的音符</h2><p>添加 <code>player</code> 参数等于 <code>true</code>，还要指定拍子的速度<code>tempo</code>，就可以立即播放你写的音符了。</p>
<pre class="vex-tab-container">options space=20 player=true  tempo=80

tabstave
notation=true
key=A time=4/4

notes :q =|: (5/2.5/3.7/4) :8 7-5h6/3 ^3^ 5h6-7/5 ^3^ :q 7V/4 |
notes :8 t12p7/4 s5s3/4 :8 3s:16:5-7/5 :h p5/4
text :w, |#segno, ,|, :hd, , #tr</pre>

<h2 id="词汇表："><a href="#词汇表：" class="headerlink" title="词汇表："></a>词汇表：</h2><ol>
<li>stave: 谱表</li>
<li>note: 音符</li>
<li>octave: 八度音阶</li>
<li>fret: 指板</li>
<li>natural: <a href="https://zh.wikipedia.org/wiki/%E5%8F%98%E9%9F%B3%E8%AE%B0%E5%8F%B7" target="_blank" rel="external">还原音</a></li>
<li>time：节拍</li>
<li>tuning: 起音</li>
<li>clef: 谱号</li>
<li>tablature: 谱式，记谱法</li>
<li>treble: 最高声部，高音部</li>
<li>alto: 女低音，中音部</li>
<li>tenor: 男高音</li>
<li>bass: 男低音，低音部</li>
<li>percussion: 打击乐器</li>
<li>common time: 4/4 拍。</li>
<li>rest: 休止符</li>
<li>double bar: <a href="https://zhidao.baidu.com/question/281000868.html" target="_blank" rel="external">复纵线</a></li>
<li>mute note: 哑音</li>
<li>vibrato: 颤音</li>
<li>chord: 和弦</li>
<li>hammer-on: 击弦</li>
<li>pull-off: 勾弦</li>
<li>tap: <a href="https://www.bilibili.com/video/av9756522/" target="_blank" rel="external">點弦</a>，轻敲吉他</li>
<li>slide: 滑弦</li>
<li>lyrics: 歌词</li>
<li>articulation: <a href="https://zh.wikipedia.org/wiki/%E9%8A%9C%E6%8E%A5_(%E9%9F%B3%E6%A8%82" target="_blank" rel="external">衔接</a>)，是音乐上的方向或技术。它影响到乐曲里音符之间的过渡或连续性。</li>
<li>staccato: (意大利语) <a href="https://zh.wikipedia.org/wiki/%E6%96%B7%E5%A5%8F" target="_blank" rel="external">断音</a>，断奏，指音符的实际时值比谱上所示的短，而减短的部分则可不作声，并于音符上加上一小点表示。</li>
<li>fermata: 延音</li>
<li>staccatissimo: 特断音</li>
<li>accent: 重音</li>
<li>codas: 尾奏</li>
<li>segno: 连续记号</li>
</ol>
<script type="text/javascript" src="/vendors/jquery/index.js?v=2.1.3"></script>
<script src="/js/src/vextab/paper.min.js"></script>
<script src="/js/src/vextab/underscore-min.js"></script>
<script src="/js/src/vextab/vexflow-min.81.js"></script>
<script src="/js/src/vextab/tabdiv-min.81.js"></script>
<script src="/js/src/vextab/vextab-support.js"></script>
<script>
    $('.vex-tab-container').each(function(index, el) {
        $this = $(el);
        var width = $('.post-body').width() * 0.9;
        var scale = 0.8;


        $this.attr('editor', "true");
        $this.attr('editor_height', "120");


        $this.attr('width', width / scale);
        $this.attr('editor_width', width);
        $this.attr('scale', scale);

        opts = {};
        opts.soundfont_url = '/soundfont/';

        new Vex.Flow.TabDiv(this,opts);
    });
</script>

]]></content>
    
    <summary type="html">
    
      &lt;p&gt;VexTab 是一种用于书写音乐的语言，你只需要花非常少的时间学习一下，就可以用它来创建，编辑和分享非常好看的五线谱和六线谱了。和 ASCII 谱的设计目标为易于阅读不一样，VexTab 是为了可方便书写而诞生的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="音乐" scheme="https://yedaxia.github.io/tags/%E9%9F%B3%E4%B9%90/"/>
    
      <category term="音乐编程" scheme="https://yedaxia.github.io/tags/%E9%9F%B3%E4%B9%90%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>一个会弹吉他の人, 他的一生 | 9个视频拼成的故事</title>
    <link href="https://yedaxia.github.io/Story-Of-A-Guitarist/"/>
    <id>https://yedaxia.github.io/Story-Of-A-Guitarist/</id>
    <published>2018-01-29T16:30:05.000Z</published>
    <updated>2018-01-31T12:01:43.076Z</updated>
    
    <content type="html"><![CDATA[<p>不如，讲个故事给你听如何？名字就叫做「一个会弹吉他の人，他的一生」吧。文后有吉他谱。</p>
<a id="more"></a>
<p>我把这些天手机录的视频凑在一起，拼成一个小故事给你。名字就叫做「一个会弹吉他の人，他的一生」吧。</p>
<p>上学的时候，除了刻苦学习，望着教室的窗外发呆，你还会期待每天的下课铃声，和 Ta 一起慢悠悠走去饭堂。</p>
<iframe height="250" width="400" src="http://player.youku.com/embed/XMzM2MzQzNDAwMA==" frameborder="0" 'allowfullscreen'=""></iframe>

<blockquote>
<p>歌曲: 等你下课 - 周杰伦</p>
</blockquote>
<p>美好的时光总是过的那么快，到了毕业的季节，为了生存，我们不得各奔东西。一个人在外面奋斗，难免有感到孤独的时候，但也要学会过的很快乐。</p>
<iframe height="250" width="400" src="http://player.youku.com/embed/XMzM1NTc1NjM0MA==" frameborder="0" 'allowfullscreen'=""></iframe>

<blockquote>
<p>歌曲：再见二丁目-杨千嬅<br>歌词：原来过得很快乐，只我一人未发觉，如能忘掉渴望，岁月长 衣裳薄</p>
</blockquote>
<p>有时候遇到困难，感觉坚持不下去了，告诉自己，别轻易放弃。在这个世界上，还有很多甚至身体都不健全的人都在为自己的生命在努力勇敢的走下去，我已经很幸运了，别想这么多，你还年轻，喜欢的事，做下去就是了。</p>
<iframe height="250" width="400" src="http://player.youku.com/embed/XMzM2MzQzMDY5Ng==" frameborder="0" 'allowfullscreen'=""></iframe>

<blockquote>
<p>歌曲：稻香-周杰伦<br>歌词：为什麽人要这麽的脆弱 堕落，请你打开电视看看，多少人为生命在努力勇敢的走下去</p>
</blockquote>
<p>你靠会弹点吉他找到了自己的初恋，但是由于情商太低，很快就失恋了。虽然内心悲痛，但请祝福对方可以找到更好的，感谢你曾经来过，带给我美好的回忆。</p>
<iframe height="250" width="400" src="http://player.youku.com/embed/XMzM2MzQzMjk2MA==" frameborder="0" 'allowfullscreen'=""></iframe>

<blockquote>
<p>歌曲：someone like you - adele<br>歌词：Never mind, I’ll find someone like you, I wish nothing but the best for you</p>
</blockquote>
<p>时光荏苒，你终遇到了对的Ta，你们携手走进了婚姻的殿堂，开始了人生的下一个阶段，在婚礼上，你在心里默念：</p>
<iframe height="250" width="400" src="http://player.youku.com/embed/XMzM1MjMxMDk5Ng==" frameborder="0" 'allowfullscreen'=""></iframe>

<blockquote>
<p>歌曲：(better man)做更好的男人(中文版)<br>歌词：做为一个男人 呵护爱他的女人 别让她哭泣 那是一生的责任</p>
</blockquote>
<p>爱情的结晶如约而至，你感觉到身上的责任更重了，偶尔会和心爱的人还发生一些小争吵，难免有心烦意乱的时候，有时候需要适当放空一下，约三两知己，解酒消愁：</p>
<iframe height="250" width="400" src="http://player.youku.com/embed/XMzM0OTQ4NjMxMg==" frameborder="0" 'allowfullscreen'=""></iframe>

<blockquote>
<p>歌曲：消愁-毛不易<br>歌词：一杯敬明天 一杯敬过往，一杯敬自由 一杯敬死亡</p>
</blockquote>
<p>不知觉人生过半，经过半个世纪的人情世故，你内心无比明亮，明白到，世事不可强求，要顺其自然。</p>
<iframe height="250" width="400" src="http://player.youku.com/embed/XMzM1ODgyMDU3Mg==" frameborder="0" 'allowfullscreen'=""></iframe>

<blockquote>
<p>歌曲：Whatever Will Be, Will Be - Doris Day<br>歌词：Que sera, sera, Whatever will be, will be, The future’s not ours to see , Que sera, sera</p>
</blockquote>
<p>无论你如何眷恋或厌恶，无论你贫穷或是富贵，终究难逃命运的轮回，我希望有人会记得我的名字。</p>
<iframe height="250" width="400" src="http://player.youku.com/embed/XMzM2MzQzNDk3Ng==" frameborder="0" 'allowfullscreen'=""></iframe>

<blockquote>
<p>歌曲：Tears in Heaven<br>歌词：Would you know my name , If I saw you in heaven? </p>
</blockquote>
<p>有时候我会想，时间的本质究竟是什么? 我们经历的过去，就在你看我文章上一个视频那个瞬间，它还在吗？如果存在一个解忧杂货铺，给你一个写给过去的自己一封信的机会，你会对自己说些什么？</p>
<iframe height="250" width="400" src="http://player.youku.com/embed/XMzM2MTU1MzE5Ng==" frameborder="0" 'allowfullscreen'=""></iframe>

<blockquote>
<p>歌词：歌曲：解忧杂货铺主题曲-重生<br>歌词：如果有天可以让你选择，人生重来或继续？告诉你吧，我也曾面临这难题，而你现在看到的，是谜底。</p>
</blockquote>
<p>The End！</p>
<p>Do you like it? Please let me know.</p>
<p><strong>附上扒的吉他谱：</strong></p>
<p><a href="http://52cmajor.com/tab/1363502" target="_blank" rel="external">等你下课-吉他谱</a></p>
<p><a href="http://52cmajor.com/tab/1363958" target="_blank" rel="external">再见二目丁吉他谱</a></p>
<p><a href="http://52cmajor.com/tab/1363957" target="_blank" rel="external">better man 吉他谱</a></p>
<p><a href="http://52cmajor.com/tab/1363956" target="_blank" rel="external">消愁-吉他谱</a></p>
<p><a href="http://52cmajor.com/tab/1364061" target="_blank" rel="external">解忧杂货铺主题曲-重生-吉他谱</a></p>
<p><a href="http://52cmajor.com/tab/1364104" target="_blank" rel="external">whatever will be, will be-吉他谱</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;不如，讲个故事给你听如何？名字就叫做「一个会弹吉他の人，他的一生」吧。文后有吉他谱。&lt;/p&gt;
    
    </summary>
    
    
      <category term="音乐" scheme="https://yedaxia.github.io/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>Android团队技术成长计划</title>
    <link href="https://yedaxia.github.io/Android-Learning-Team/"/>
    <id>https://yedaxia.github.io/Android-Learning-Team/</id>
    <published>2017-03-15T12:35:51.000Z</published>
    <updated>2017-03-15T12:59:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在想如何提升自己和团队成员的技术能力，其实无非就是多阅读优秀源码，优秀书籍，写技术文章等，但在查阅资料的的时候还是收获了不少东西，尤其是刘未鹏大神那篇文章，这边整理可能更多是学习相关的技能树，发表到这里当个备份了。</p>
<a id="more"></a>
<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>建立一个学习型的技术团队，实现公司和个人的共赢。</p>
<h1 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h1><p>对于公司:</p>
<ul>
<li>更高质量的产品</li>
<li>更快的产出</li>
</ul>
<p>对于个人：</p>
<ul>
<li>更出色的能力</li>
<li>更高的收入</li>
<li>更少的时间投入(少加班)</li>
</ul>
<h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><ol>
<li>基于现有开发中用到的库和工具，每周向自己提一个还不是特别懂的问题，通过阅读源码和相关文章，试图找到答案，并输出一篇自己的技术博文。</li>
<li>基于当前的业务和需求，构建团队内部的基础库, 并逐步开源到社区。</li>
<li>每月一次内部技术分享。</li>
</ol>
<h1 id="技术学习"><a href="#技术学习" class="headerlink" title="技术学习"></a>技术学习</h1><h2 id="优秀书籍"><a href="#优秀书籍" class="headerlink" title="优秀书籍"></a>优秀书籍</h2><p><strong>基础:</strong></p>
<ul>
<li>《算法导论》</li>
<li>《数学之美》</li>
<li><a href="http://item.jd.com/11786791.html" target="_blank" rel="external">《编程之法》</a></li>
<li>《Unix高级编程》《Unix进程间通信》</li>
<li>《TCP／IP详解》卷1卷2</li>
</ul>
<p><strong>语言:</strong></p>
<ul>
<li>《Java编程思想》</li>
<li>《深入理解Java虚拟机》</li>
<li><a href="http://www.infoq.com/cn/minibooks/java_memory_model?utm_source=infoq&amp;utm_campaign=user_page&amp;utm_medium=link" target="_blank" rel="external">《深入理解Java内存模型》</a></li>
</ul>
<p><strong>编码和设计:</strong></p>
<ul>
<li>《代码整洁之道》</li>
<li>《设计模式》</li>
<li><a href="https://design-patterns.readthedocs.io/zh_CN/latest/index.html" target="_blank" rel="external">《图说设计模式》</a></li>
</ul>
<p>Android开发:</p>
<ul>
<li><a href="https://developer.android.google.cn/training/index.html" target="_blank" rel="external">Android 开发者培训</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLWz5rJ2EKKc-lJo_RGGXL2Psr8vVCTWjM" target="_blank" rel="external">Android Development Patterns 视频集锦</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLWz5rJ2EKKc9CBxr3BVjPTPoDPLdPIFCE" target="_blank" rel="external">Android Performance Patterns 视频集锦</a></li>
<li>《深入理解Android》系列</li>
</ul>
<h2 id="优秀源码"><a href="#优秀源码" class="headerlink" title="优秀源码"></a>优秀源码</h2><p><strong>网络</strong></p>
<ul>
<li><a href="http://square.github.io/okhttp/" target="_blank" rel="external">okHttp</a></li>
<li><a href="https://github.com/square/retrofit" target="_blank" rel="external">retrofit</a></li>
<li><a href="https://github.com/google/volley" target="_blank" rel="external">volley</a></li>
<li><a href="https://github.com/Tencent/mars" target="_blank" rel="external">tencent mars</a></li>
</ul>
<p><strong>数据解析</strong></p>
<ul>
<li><a href="https://github.com/google/gson" target="_blank" rel="external">Gson</a></li>
<li><a href="https://github.com/alibaba/fastjson" target="_blank" rel="external">fastjson</a></li>
</ul>
<p><strong>图片加载</strong></p>
<ul>
<li><a href="https://github.com/bumptech/glide" target="_blank" rel="external">Glide</a></li>
<li><a href="https://github.com/square/picasso" target="_blank" rel="external">Picasso</a></li>
<li><a href="https://github.com/facebook/fresco" target="_blank" rel="external">Fresco</a></li>
</ul>
<p><strong>ORM</strong></p>
<ul>
<li><a href="https://github.com/greenrobot/greenDAO" target="_blank" rel="external">greenDAO</a></li>
<li><a href="https://github.com/pardom/ActiveAndroid" target="_blank" rel="external">ActiveAndroid</a></li>
</ul>
<p><strong>视频</strong></p>
<ul>
<li><a href="https://github.com/bbcallen/ijkplayer" target="_blank" rel="external">ijkplayer</a></li>
<li><a href="https://github.com/google/ExoPlayer" target="_blank" rel="external">ExoPlayer</a></li>
<li><a href="https://github.com/sannies/mp4parser" target="_blank" rel="external">mp4parser</a></li>
</ul>
<p><strong>图片处理</strong></p>
<ul>
<li><a href="https://github.com/CyberAgent/android-gpuimage" target="_blank" rel="external">GPUImage</a></li>
</ul>
<p><strong>依赖注入</strong></p>
<ul>
<li><a href="https://github.com/JakeWharton/butterknife" target="_blank" rel="external">Butter Knife</a></li>
<li><a href="https://github.com/google/dagger" target="_blank" rel="external">Dagger(Google)</a></li>
</ul>
<p><strong>事件订阅</strong></p>
<ul>
<li><a href="https://github.com/greenrobot/EventBus" target="_blank" rel="external">Event Bus</a></li>
</ul>
<p><strong>函数式编程</strong></p>
<ul>
<li><a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="external">RxJava</a></li>
</ul>
<p><strong>热加载和插件化</strong></p>
<ul>
<li><a href="https://github.com/Tencent/tinker/" target="_blank" rel="external">Tinker</a></li>
<li><a href="https://github.com/alibaba/AndFix" target="_blank" rel="external">AndFix</a></li>
</ul>
<p><strong>控件集合</strong></p>
<ul>
<li><a href="https://github.com/wasabeef/awesome-android-ui" target="_blank" rel="external">awesome-android-ui</a></li>
</ul>
<h2 id="质量控制"><a href="#质量控制" class="headerlink" title="质量控制"></a>质量控制</h2><ul>
<li><a href="http://checkstyle.sourceforge.net/" target="_blank" rel="external">checkstyle</a></li>
<li><a href="http://findbugs.sourceforge.net/" target="_blank" rel="external">findbugs</a></li>
<li><a href="http://junit.org/junit4/" target="_blank" rel="external">junit</a></li>
<li><a href="http://site.mockito.org/" target="_blank" rel="external">mockito</a></li>
<li><a href="http://robolectric.org/" target="_blank" rel="external">robolectric</a></li>
<li><a href="https://github.com/hehonghui/android-tech-frontier/tree/master/issue-7/%E4%BD%BF%E7%94%A8Robolectric%E5%92%8CAndroid%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%E8%A6%86%E7%9B%96%E7%8E%87%E6%8A%A5%E5%91%8A" target="_blank" rel="external">jacoco</a></li>
<li><a href="https://google.github.io/android-testing-support-library/docs/espresso/" target="_blank" rel="external">Espresso</a></li>
</ul>
<h2 id="优秀站"><a href="#优秀站" class="headerlink" title="优秀站"></a>优秀站</h2><p>个人:</p>
<ul>
<li><a href="http://p.codekk.com/" target="_blank" rel="external">CodeKK</a></li>
<li><a href="https://drakeet.me/" target="_blank" rel="external">Drakeet</a></li>
<li><a href="http://gank.io/" target="_blank" rel="external">GankIO</a></li>
<li><a href="http://stormzhang.com/" target="_blank" rel="external">stormzhang</a></li>
<li><a href="http://www.trinea.cn/" target="_blank" rel="external">Trinea</a></li>
<li><a href="https://blog.piasy.com/" target="_blank" rel="external">Piasy</a></li>
<li><a href="http://www.androiddevtools.cn/" target="_blank" rel="external">androiddevtools</a></li>
<li><a href="http://droidyue.com/" target="_blank" rel="external">技术小黑屋</a></li>
<li><a href="https://www.liaohuqiu.net/cn/" target="_blank" rel="external">Srain</a></li>
<li><a href="http://gityuan.com/" target="_blank" rel="external">Gityuan</a></li>
<li><a href="https://www.diycode.cc/" target="_blank" rel="external">diycode</a></li>
<li><a href="http://hukai.me/" target="_blank" rel="external">胡凯</a></li>
<li><a href="http://blog.csdn.net/luoshengyang" target="_blank" rel="external">老罗的Android之旅</a></li>
<li><a href="http://blog.csdn.net/innost" target="_blank" rel="external">邓凡平博客</a></li>
</ul>
<p>团体:</p>
<ul>
<li><a href="">Android开发官方博客</a></li>
<li><a href="http://tech.meituan.com/" target="_blank" rel="external">美团点评技术团队</a></li>
<li><a href="https://code.facebook.com/" target="_blank" rel="external">Facebook</a></li>
<li><a href="http://square.github.io/" target="_blank" rel="external">Square</a></li>
<li><a href="https://yq.aliyun.com/teams/13?spm=5176.100244.0.0.B7S29p" target="_blank" rel="external">手机淘宝技术团队</a></li>
<li><a href="https://github.com/WeMobileDev/article" target="_blank" rel="external">WeMobileDev</a></li>
<li><a href="http://www.cnblogs.com/bugly/" target="_blank" rel="external">腾讯bugly</a></li>
</ul>
<h2 id="社交账号"><a href="#社交账号" class="headerlink" title="社交账号"></a>社交账号</h2><p>Google Plus: [AndroidDevelopers,Colt McAnlis]</p>
<p>微信公众号: [WeMobileDev,AndroidDeveloper,谷歌开发者,codeKK]</p>
<h2 id="高效工具"><a href="#高效工具" class="headerlink" title="高效工具"></a>高效工具</h2><ul>
<li>抓包: <a href="http://blog.devtang.com/2015/11/14/charles-introduction/" target="_blank" rel="external">Charles</a>, <a href="http://www.jianshu.com/p/4903a03a3816" target="_blank" rel="external">Fiddler</a>, Wireshark</li>
<li>编辑器: <a href="http://coolshell.cn/articles/5426.html" target="_blank" rel="external">vim</a>,  Andoid Studio#<a href="http://weishu.me/2015/12/21/android-studio-debug-tips-you-may-not-know/" target="_blank" rel="external">调试</a>#<a href="http://zlv.me/posts/2015/07/13/14_android-studio-tips/" target="_blank" rel="external">技巧1</a>#<a href="http://blog.csdn.net/growth58/article/details/46729803" target="_blank" rel="external">技巧2</a>#, <a href="http://xianbai.me/learn-md/index.html" target="_blank" rel="external">markdown</a></li>
<li>搜索: google,github,<a href="http://www.oschina.net/" target="_blank" rel="external">开源中国</a></li>
<li>绘图工具: <a href="https://www.processon.com" target="_blank" rel="external">processon</a></li>
<li>协作: <a href="http://git.oschina.net/progit/" target="_blank" rel="external">git</a></li>
<li>构建: <a href="https://lippiouyang.gitbooks.io/gradle-in-action-cn/content/" target="_blank" rel="external">gradle</a></li>
</ul>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料:"></a>参考资料:</h1><ul>
<li><a href="http://bxbxbai.github.io/2015/09/29/why-a-team-should-write-a-blog/" target="_blank" rel="external">为什么技术团队应该写博客？</a></li>
<li><a href="http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/" target="_blank" rel="external">为什么你应该（从现在开始就）写博客</a></li>
<li><a href="http://qingmang.me/articles/1671909240046720664" target="_blank" rel="external">建立学习型组织</a></li>
<li><a href="https://www.zhihu.com/question/19775981" target="_blank" rel="external">有哪些 Android 大牛的 blog 值得推荐</a></li>
<li><a href="https://github.com/wasabeef/awesome-android-libraries" target="_blank" rel="external">优秀的Android开源库</a></li>
<li><a href="https://www.diycode.cc/trends" target="_blank" rel="external">github排行榜</a></li>
<li><a href="http://tech.youzan.com/code-coverage/" target="_blank" rel="external">浅谈测试覆盖率</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在想如何提升自己和团队成员的技术能力，其实无非就是多阅读优秀源码，优秀书籍，写技术文章等，但在查阅资料的的时候还是收获了不少东西，尤其是刘未鹏大神那篇文章，这边整理可能更多是学习相关的技能树，发表到这里当个备份了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="团队学习" scheme="https://yedaxia.github.io/tags/%E5%9B%A2%E9%98%9F%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="技术成长" scheme="https://yedaxia.github.io/tags/%E6%8A%80%E6%9C%AF%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>API文档生成工具设计与实现</title>
    <link href="https://yedaxia.github.io/ApiDocs-Design-And-For-PlayFramework/"/>
    <id>https://yedaxia.github.io/ApiDocs-Design-And-For-PlayFramework/</id>
    <published>2017-01-15T14:09:06.000Z</published>
    <updated>2017-01-15T14:36:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>我一直倡导项目组的开发应该接口设计先行，定下接口协议后各端就可以并行开发了。但是据我了解，还是有不少团队是服务端人员先把接口的逻辑代码写的差不多再交付给客户端接口文档的。通过这个文档生成工具，服务端人员更加愿意提前先设计好接口了，靠工具生成漂亮的文档提前交付未实现的接口给下游人员，而又没有多少增加工作量，整个开发过程会变得更加愉快。<br><a id="more"></a></p>
<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>之前有在IDE端根据API文档生成相关接口的数据模型，这减少了客户端这边的工作量，具体可以看上一篇文章:<a href="https://yedaxia.github.io/Android-Studio-ModelCodeGenerator/">Model代码插件开发</a>。后面想到如果直接让服务端订好接口的代码规范，那么就可以通过写个工具把API文档，Android和IOS的数据模型代码一并生成了，这样既减少了客户端的工作量，又能减少服务端人员的工作量(不用再去手工维护接口文档)。</p>
<p>我们先来看看最终的效果:<a href="https://yedaxia.github.io/play-apidocs/">点击查看</a></p>
<h1 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h1><h2 id="服务端环境"><a href="#服务端环境" class="headerlink" title="服务端环境"></a>服务端环境</h2><p>目前服务端的API接口是通过<a href="https://www.playframework.com/documentation/1.4.x/home" target="_blank" rel="external">Play1.4版本</a>框架来写的，通过研究服务端的代码结构，不难知道它的路由是通过一个<code>conf/routes</code>配置文件来维护的，它的结构如下:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># api</div><div class="line">POST    /api/admin/auth    api.admin.AdminController.auth</div><div class="line">GET     /api/game/list     api.game.GameController.list</div><div class="line">GET     /api/messageList   api.MyController.messageList</div></pre></td></tr></table></figure>
<p><code>#</code>是注释，一条路由从左到右分别是[请求方法,请求接口,具体调用所在类的方法]，结构非常清晰。</p>
<p>我们来看一下具体某个接口代码:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@Description</span> 消息列表接口</div><div class="line"> * <span class="doctag">@param</span> type 消息类型0是系统消息；1是回复我的；2是点赞我的；</div><div class="line"> * <span class="doctag">@param</span> page 页码 从1开始</div><div class="line"> * <span class="doctag">@author</span> yedaxia</div><div class="line"> */</div><div class="line"><span class="meta">@ApiResult</span>(name = MessageListResult.class)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">messageList</span><span class="params">(@Required <span class="keyword">int</span> type, @Required <span class="keyword">int</span> page)</span> </span>&#123;</div><div class="line">	renderJSON();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>方法的参数和请求的参数一致，注解是一些验证，如果有，表示该参数是必须要传的。</p>
<h2 id="API描述信息"><a href="#API描述信息" class="headerlink" title="API描述信息"></a>API描述信息</h2><p>api是客户端和服务端通信的接口，一般是http或者https作为协议载体，主要包含了请求信息和返回的信息。</p>
<p><strong>请求信息:</strong></p>
<ul>
<li>基本信息</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">接口作用描述</div><div class="line">接口作者: yedaxia</div><div class="line">method：POST</div><div class="line">url: api.github/updateUserinfo</div></pre></td></tr></table></figure>
<ul>
<li>参数列表</li>
</ul>
<table>
<thead>
<tr>
<th>参数名</th>
<th>类型</th>
<th>必需</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>name</td>
<td>String</td>
<td>true</td>
<td>用户名</td>
</tr>
</tbody>
</table>
<ul>
<li>返回结果:</li>
</ul>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"id"</span>: <span class="string">"long //用户id"</span>,</div><div class="line">  <span class="attr">"name"</span>: <span class="string">"String //用户昵称"</span>,</div><div class="line">  <span class="attr">"gender"</span>: <span class="string">"int //用户性别（1：男；2：女;0：未知）"</span>,</div><div class="line">  <span class="attr">"avatar"</span>: <span class="string">"String //用户头像"</span>,</div><div class="line">  <span class="attr">"token"</span>: <span class="string">"String //用户token"</span>,</div><div class="line">  <span class="attr">"isNewUser"</span>: <span class="string">"int //是否是新用户"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>返回结果我们用json数据结构表示，这样在多层的数据结构中可读性更强，而且许多应用也是采用的json格式作为返回结果，我们在相应的字段后加入类型和相关的注释。有了这些信息之后，对于客户端开发人员来说就很清晰了，有问题也可以根据作者找到相关的后端人员。</p>
<h2 id="建立关联关系"><a href="#建立关联关系" class="headerlink" title="建立关联关系"></a>建立关联关系</h2><ol>
<li><p><code>基本信息</code> 可以读取<code>routes</code>的路由信息; <code>接口描述</code>读取方法上的<code>@Description</code>注释信息，<code>接口作者</code> 读取相关接口方法的<code>@author</code>注释。</p>
</li>
<li><p><code>参数列表</code>中的参数可以读取方法中参数，<code>参数名</code>和<code>类型</code>很容易就对应上，如果有注解<code>@Required</code>或者其他的就视为必传参数，相关注释读取<code>@param</code>注释，这些都和java的编程习惯保持一致。</p>
</li>
<li><p><code>返回结果</code>这个就不好直接知道了，通过协商，决定通过添加一个注解来完成，这可能也是唯一增加了服务端工作的一个地方，前面看到的<code>@ApiResult(name = MessageListResult.class)</code>就是我们定义返回结果了，<code>MessageListResult</code>是个简单的JavaBean对象，里面的每个字段和返回的字段一一对应。生成的结果应该支持数组或者列表，类的组合，继承等；每个字段都有类型和相关的注释信息。</p>
</li>
</ol>
<h2 id="展示形式"><a href="#展示形式" class="headerlink" title="展示形式"></a>展示形式</h2><p>一开始是打算通过生成markdown的代码，后面发现从markdown转成html代码的几个java库生成效果不是特别理想，最后还是决定通过html模板来实现。</p>
<p>每个<code>Controller</code>作为一个API集合，放在一个单独的文件中，通过锚点和目录的方式来实现方便的跳转。</p>
<h1 id="实现结果"><a href="#实现结果" class="headerlink" title="实现结果"></a>实现结果</h1><p>最终的实现效果可以点击这里进行<a href="https://yedaxia.github.io/play-apidocs/">查看</a>，至此，我们API文档的完整性和规范性完全交给代码本身进行维护，并自动生成了相关客户端的数据模型代码，有效减少了大家的工作量，实施效果非常好。</p>
<p>相关代码和例子已经上传到<a href="https://github.com/YeDaxia/Docs-For-PlayFramework" target="_blank" rel="external">github</a>了，由于当前只能支持<code>Play</code>框架，如果大家有兴趣可以提相关issue或者自己去研读代码，提交自己的实现，笔者有时间会考虑支持其他框架。</p>
<h1 id="进一步思考"><a href="#进一步思考" class="headerlink" title="进一步思考"></a>进一步思考</h1><p>我一直倡导项目组的开发应该接口设计先行，定下接口协议后各端就可以并行开发了。但是据我了解，还是有不少团队是服务端人员先把接口的逻辑代码写的差不多再交付给客户端接口文档的。通过这个文档生成工具，服务端人员更加愿意提前先设计好接口了，靠工具生成漂亮的文档提前交付未实现的接口给下游人员，而又没有多少增加工作量，整个开发过程会变得更加愉快。虽然整个流程看起来已经比较顺畅了，但是在应付接口变化还需要进一步的努力，除了接口设计上的扩展性应该更好一些之外，在文档工具上后续会考虑加入ChangeLog。</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol>
<li><a href="http://blog.csdn.net/viviju1989/article/details/8529453" target="_blank" rel="external">Java反射获取方法的参数名列表</a></li>
<li><a href="https://github.com/apidoc/apidoc" target="_blank" rel="external">apidoc 开源项目</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我一直倡导项目组的开发应该接口设计先行，定下接口协议后各端就可以并行开发了。但是据我了解，还是有不少团队是服务端人员先把接口的逻辑代码写的差不多再交付给客户端接口文档的。通过这个文档生成工具，服务端人员更加愿意提前先设计好接口了，靠工具生成漂亮的文档提前交付未实现的接口给下游人员，而又没有多少增加工作量，整个开发过程会变得更加愉快。&lt;br&gt;
    
    </summary>
    
    
      <category term="ApiDocs" scheme="https://yedaxia.github.io/tags/ApiDocs/"/>
    
      <category term="PlayFramework" scheme="https://yedaxia.github.io/tags/PlayFramework/"/>
    
  </entry>
  
</feed>
